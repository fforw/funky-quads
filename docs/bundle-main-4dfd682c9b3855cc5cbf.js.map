{"version":3,"sources":["webpack://Demo/webpack/bootstrap","webpack://Demo/./src/vector.js","webpack://Demo/./src/Settings.js","webpack://Demo/./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sqrt","Math","Vector","x","y","this","targetLength","scale","reducer","state","action","type","newState","errors","recreate","error","ctx","canvas","Input","label","config","dispatch","placeholder","validate","disabled","errorForField","useDebouncedCallback","debouncedInputValidation","className","cx","defaultValue","title","size","onChange","ev","target","Checkbox","defaultChecked","checked","NumberInput","min","max","rest","v","isNaN","Settings","configFromProps","useReducer","onClick","TAU","PI","SIXTH","width","height","edgeLength","numberOfRings","maxIterations","removeEdges","minEnergy","animatedEasing","findOtherEdge","faces","x0","y0","x1","y1","index","out","count","edge","graph","subdivide","numNodes","tris","quads","firstPassLen","calculateNumNodes","nodes","Float64Array","pos","insertNode","isEdge","abs","insertEdge","n0","n1","found","Error","connect","x2","y2","outmostEdge","firstEdgeIsOutmost","secondEdgeIsOutmost","m0x","m0y","m1x","m1y","m2x","m2y","cy","n2","n3","n4","n5","n6","x3","y3","m3x","m3y","n7","n8","relaxWeighted","energy","edgeCount","centerX","centerY","sumWeight","k","other","dx","dy","weight","console","log","relaxCount","createGraph","limit","numFaces","firstPassNumEdges","animating","cfg","assign","resize","updateConfig","f","DIRECTIONS","cos","sin","off","numTris","v0","v1","v2","copy","add","isOutmost","createHexagonalTiles","success","printEdge","otherIndex","outMostEdge","random","targetIsOutmostFace","otherEdge","otherIsOutmostTri","removeRandomEdges","redrawGraph","save","hw","hh","translate","drawEdge","node","beginPath","moveTo","lineTo","stroke","fillStyle","fillRect","strokeStyle","lineWidth","restore","raf","innerWidth","innerHeight","domready","document","getElementById","getContext","ReactDOM","render","addEventListener"],"mappings":"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","file":"bundle-main-4dfd682c9b3855cc5cbf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpDemo\"] = window[\"webpackJsonpDemo\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([15,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const sqrt = Math.sqrt;\n\nclass Vector\n{\n    constructor(x,y)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Returns a copy of this vector.\n     *\n     * @returns {Vector} copy\n     */\n    copy()\n    {\n        return new Vector(this.x,this.y);\n    }\n\n    /**\n     * Adds to this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n\n    add(x,y)\n    {\n        if (x instanceof Vector)\n        {\n            this.x += x.x;\n            this.y += x.y;\n        }\n        else\n        {\n            this.x += x;\n            this.y += y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Subtracts from this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n    subtract(x,y)\n    {\n        if (x instanceof Vector)\n        {\n            this.x -= x.x;\n            this.y -= x.y;\n        }\n        else\n        {\n            this.x -= x;\n            this.y -= y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Scales the vector by a planar number.\n     *\n     * @param n     scale\n     * @returns {Vector} this vector, scaled\n     */\n    scale(n)\n    {\n        this.x *= n;\n        this.y *= n;\n\n        return this;\n    }\n\n    /**\n     * Length of this vector\n     *\n     * @returns {number}    length\n     */\n    length()\n    {\n        const { x, y } = this;\n        return sqrt(x*x+y*y);\n    }\n\n    /**\n     * Scales the vector to normal length or a specified length\n     *\n     * @param targetLength      {number?} target length of the vector (default is 1, the normal vector length)\n     *\n     * @returns {Vector}\n     */\n    norm(targetLength = 1)\n    {\n        return this.scale(targetLength / this.length());\n    }\n\n    /**\n     * Rotate vector 90 degrees clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateClockwise()\n    {\n        const { x, y } = this;\n\n        //noinspection JSSuspiciousNameCombination\n        this.x = y;\n        this.y = -x;\n\n        return this;\n    }\n\n    /**\n     * Rotate vector 90 degrees counter clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateCounterClockwise()\n    {\n        const { x, y } = this;\n\n        this.x = -y;\n        //noinspection JSSuspiciousNameCombination\n        this.y = x;\n\n        return this;\n    }\n}\n\nexport default Vector;\n","import React, { useReducer, useState } from \"react\"\nimport { useDebouncedCallback } from \"use-debounce\"\nimport cx from \"classnames\"\n\nconst SET_FIELD = \"SET_FIELD\";\nconst SET_ERROR = \"SET_ERROR\";\n\nfunction reducer(state,action)\n{\n    const { type } = action;\n    switch(type)\n    {\n        case SET_FIELD:\n            const newState = {\n                ... state,\n                [action.name] : action.value,\n                errors: {\n                    ... state.errors,\n                    [action.name] : \"\"\n                }\n            };\n            newState.recreate(newState);\n            return newState;\n\n        case SET_ERROR:\n            return {\n                ... state,\n                errors: {\n                    ... state.errors,\n                    [action.name] : action.error\n                }\n            };\n    }\n\n}\n\n\nconst Input = ({label, name, config, dispatch, placeholder, validate, disabled, error}) =>  {\n\n    const errorForField = config.errors && config.errors[name];\n\n    const [ debouncedInputValidation, cancelDebouncedInputValidation ] = useDebouncedCallback(value => {\n\n        if (validate)\n        {\n            value = validate(value);\n        }\n        if (value !== null)\n        {\n            dispatch({\n                type: SET_FIELD,\n                name,\n                value\n            })\n        }\n        else\n        {\n            dispatch({\n                type: SET_ERROR,\n                name,\n                error\n            })\n        }\n\n\n    }, 350);\n    return (\n        <div>\n            <label>\n                {\n                    label\n                }\n            <input\n                className={ cx( !!errorForField && \"error\" )}\n                type=\"text\"\n                defaultValue={ config[name] }\n                placeholder={placeholder}\n                title={ placeholder }\n                size={4}\n                disabled={disabled}\n                onChange={ ev => {\n                    let value = ev.target.value;\n\n                    debouncedInputValidation(value);\n                }}\n            />\n            </label>\n            {\n                errorForField && <div className=\"error\">{ errorForField }</div>\n            }\n        </div>\n\n    )\n}\n\nconst Checkbox = ({label, name, config, dispatch, disabled}) =>  {\n\n    return (\n        <div>\n            <label>\n                {\n                    label\n                }\n            <input\n                type=\"checkbox\"\n                defaultChecked={ config[name] }\n                size={4}\n                disabled={disabled}\n                onChange={ ev => {\n                    let value = ev.target.checked;\n\n                    dispatch({\n                        type: SET_FIELD,\n                        name,\n                        value\n                    })\n                }}\n            />\n            </label>\n        </div>\n    )\n}\n\nconst NumberInput = ({ min, max, ... rest}) =>  {\n    return (\n        <Input\n            { ... rest }\n            placeholder={ min + \" to \" + max }\n            error={ \"Must be number from \" + min + \" to \" + max }\n            validate={ v => {\n                const n = +v;\n                return !isNaN(n) && n >=min && n <= max ? n : null\n\n            }}\n\n        />\n    )\n}\n\n\nconst Settings = ({config: configFromProps}) => {\n\n    const [config, dispatch] = useReducer(reducer, configFromProps);\n\n    //console.log(\"Render\", config);\n\n    return (\n        <div>\n            <NumberInput\n                label=\"Number of Rings\"\n                name=\"numberOfRings\"\n                config={ config }\n                dispatch={dispatch}\n                min={1}\n                max={30}\n\n            />\n            <Checkbox\n                label=\"Animated Easing\"\n                name=\"animatedEasing\"\n                config={ config }\n                dispatch={dispatch}\n            />\n\n            <NumberInput\n                label=\"Percent of edges to remove\"\n                name=\"removeEdges\"\n                config={ config }\n                dispatch={dispatch}\n                min={0}\n                max={100}\n            />\n            <button\n                type=\"button\"\n                onClick={ () => config.recreate(config) }\n            >\n                Redraw\n            </button>\n        </div>\n    );\n};\n\nexport default Settings;\n","import domready from \"domready\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport raf from \"raf\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./style.css\"\nimport Vector from \"./vector\";\nimport Settings from \"./Settings\";\n\n\nconst PHI = (1 + Math.sqrt(5)) / 2;\nconst TAU = Math.PI * 2;\nconst DEG2RAD_FACTOR = TAU / 360;\n\n\nlet ctx, canvas;\n\nconst SIZE = 10; // count + case(1=odd face 2=outmost tri) + 4 * x/y\n\nconst SIXTH = TAU / 6;\n\nfunction calculateNumberOfFaces(limit)\n{\n    return 6 * (limit + 1) * (limit + 1);\n}\n\nconst config = {\n    width: 0,\n    height: 0,\n    edgeLength: 80,\n    numberOfRings: 10,\n    maxIterations: 80,\n    removeEdges: 50,\n    minEnergy: 2,\n    animatedEasing: true\n};\n\nfunction updateConfig(config)\n{\n    config.numFaces = calculateNumberOfFaces(config.numberOfRings)\n    config.firstPassLen = config.numFaces * SIZE\n    config.firstPassNumEdges = config.numFaces * 3\n    config.edgeLength = (config.height / (config.numberOfRings * 2 + 2))|0;\n    config.animating = config.animatedEasing;\n    config.relaxCount = 0;\n\n    config.recreate = cfg =>\n    {\n        Object.assign(config, cfg)\n        resize();\n    }\n    console.log({config})\n}\n\n\n\nfunction createHexagonalTiles(config)\n{\n\n    const limit = config.numberOfRings;\n\n    //console.log(\"createHexagonalTiles\", limit);\n\n    const DIRECTIONS = [\n        new Vector(\n            Math.cos(0) * config.edgeLength,\n            Math.sin(0) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH) * config.edgeLength,\n            Math.sin(SIXTH) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 2) * config.edgeLength,\n            Math.sin(SIXTH * 2) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 3) * config.edgeLength,\n            Math.sin(SIXTH * 3) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 4) * config.edgeLength,\n            Math.sin(SIXTH * 4) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 5) * config.edgeLength,\n            Math.sin(SIXTH * 5) * config.edgeLength\n        )\n    ];\n\n    const faces = new Float64Array(config.firstPassLen);\n\n    let off = 0;\n\n    let count = 0;\n    let numTris = 1;\n    do\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            const v0 = DIRECTIONS[i];\n            const v1 = DIRECTIONS[(i + 1) % 6];\n            const v2 = DIRECTIONS[(i + 2) % 6];\n\n            let pos = v0.copy().scale(count);\n\n            for (let j = 0; j < numTris; j++)\n            {\n                if (j & 1)\n                {\n                    faces[off++] = (pos.x) | 0;\n                    faces[off++] = (pos.y) | 0;\n                    faces[off++] = (pos.x + v1.x) | 0;\n                    faces[off++] = (pos.y + v1.y) | 0;\n                    faces[off++] = (pos.x + v2.x) | 0;\n                    faces[off++] = (pos.y + v2.y) | 0;\n                    off += 2;\n                    faces[off++] = 3;\n                    faces[off++] = -1;\n\n                    pos.add(v2);\n                }\n                else\n                {\n\n                    faces[off++] = (pos.x) | 0;\n                    faces[off++] = (pos.y) | 0;\n                    faces[off++] = (pos.x + v0.x) | 0;\n                    faces[off++] = (pos.y + v0.y) | 0;\n                    faces[off++] = (pos.x + v1.x) | 0;\n                    faces[off++] = (pos.y + v1.y) | 0;\n                    off += 2;\n                    faces[off++] = 3;\n\n                    // All tris in the last row all have their edge #1 on the outer edge of the big hexagon\n                    const isOutmost = count === limit;\n                    faces[off++] = isOutmost ? 1 : -1;\n                }\n            }\n        }\n\n        numTris += 2;\n\n    } while (count++ < limit);\n\n    return faces;\n}\n\n\nfunction findOtherEdge(faces, x0, y0, x1, y1, index, out)\n{\n    for (let i = 0; i < faces.length; i += SIZE)\n    {\n        if (i === index)\n        {\n            continue;\n        }\n\n        // console.log(\"find\", x0, y0, x1, y1, \":\",\n        //     faces[i    ], faces[i + 1],\n        //     faces[i + 2], faces[i + 3],\n        //     faces[i + 4], faces[i + 5],\n        //     faces[i + 6], faces[i + 7],\n        // );\n\n        const count = faces[i + 8];\n        if (\n            faces[i] === x1 && faces[i + 1] === y1 &&\n            faces[i + 2] === x0 && faces[i + 3] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 0;\n            return;\n        }\n        if (\n            faces[i + 2] === x1 && faces[i + 3] === y1 &&\n            faces[i + 4] === x0 && faces[i + 5] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 1;\n            return;\n        }\n\n        if (count === 3)\n        {\n            if (\n                faces[i + 4] === x1 && faces[i + 5] === y1 &&\n                faces[i] === x0 && faces[i + 1] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n        }\n        else\n        {\n            if (\n                faces[i + 4] === x1 && faces[i + 5] === y1 &&\n                faces[i + 6] === x0 && faces[i + 7] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n\n            if (\n                faces[i + 6] === x1 && faces[i + 7] === y1 &&\n                faces[i] === x0 && faces[i] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 3;\n                return;\n            }\n\n        }\n    }\n\n    out.index = -1;\n}\n\n\nconst out = {index: -1, edge: 0};\n\nfunction removeRandomEdges(config, faces)\n{\n    const count = config.firstPassNumEdges * config.removeEdges / 100;\n\n    //console.log(\"remove attempts\", count);\n\n    let success = 0;\n\n\n    function printEdge(faces, otherIndex, outMostEdge)\n    {\n        const count = faces[otherIndex + 8];\n        const x0 = faces[otherIndex + outMostEdge * 2]\n        const y0 = faces[otherIndex + outMostEdge * 2 + 1]\n        const x1 = outMostEdge === count -1 ? faces[otherIndex] : faces[otherIndex + (outMostEdge + 1) * 2]\n        const y1 = outMostEdge === count -1 ? faces[otherIndex + 1] : faces[otherIndex + (outMostEdge + 1) * 2 + 1]\n\n\n        return x0 + \",\" + y0 + \",\" + x1 + \",\" + y1;\n    }\n\n\n    for (let i = 0; i < count; i++)\n    {\n        const index = ((Math.random() * config.numFaces) | 0) * SIZE;\n        if (faces[index + 8] === 3)\n        {\n            const outmostEdge = faces[index + 9];\n            const targetIsOutmostFace = outmostEdge >= 0;\n\n            const edge = (Math.random() * 3) | 0;\n\n            // we can't remove any of the outmost edges around the big hexagon\n            if (!(targetIsOutmostFace))//&& edge === outmostEdge))\n            {\n\n                const x0 = faces[index + edge * 2];\n                const y0 = faces[index + edge * 2 + 1];\n                const x1 = edge === 2 ? faces[index] : faces[index + (edge + 1) * 2];\n                const y1 = edge === 2 ? faces[index + 1] : faces[index + (edge + 1) * 2 + 1];\n\n                findOtherEdge(faces, x0, y0, x1, y1, index, out)\n                if (out.index >= 0 && faces[out.index + 8] === 3)\n                {\n                    const {index: otherIndex, edge: otherEdge} = out;\n                    const x2 = edge === 0 ? faces[index + 2 * 2] : faces[index + (edge - 1) * 2];\n                    const y2 = edge === 0 ? faces[index + 2 * 2 + 1] : faces[index + (edge - 1) * 2 + 1];\n\n\n                    // check if we're merging with an outmost face\n                    const outMostEdge = faces[otherIndex + 9];\n                    const otherIsOutmostTri = outMostEdge >= 0;\n\n\n                    const before = printEdge(faces, otherIndex, outMostEdge)\n                    // if (otherIsOutmostTri)\n                    // {\n                    //     console.log(\"OUTMOST edge before split\", printEdge(faces, otherIndex, outMostEdge),\"EDGE CASE\", otherEdge, \"outMostEdge\", outMostEdge)\n                    //     console.log(\"face before\", faces.slice(otherIndex, otherIndex + SIZE))\n                    // }\n\n\n                    faces[otherIndex + 8] = 4;\n                    switch (otherEdge)\n                    {\n                        case 2:\n                            faces[otherIndex + 6] = x2;\n                            faces[otherIndex + 7] = y2;\n                            break;\n                        case 1:\n                            faces[otherIndex + 6] = faces[otherIndex + 4];\n                            faces[otherIndex + 7] = faces[otherIndex + 5];\n                            faces[otherIndex + 4] = x2;\n                            faces[otherIndex + 5] = y2;\n                            break;\n                        case 0:\n                            faces[otherIndex + 6] = faces[otherIndex + 4];\n                            faces[otherIndex + 7] = faces[otherIndex + 5];\n                            faces[otherIndex + 4] = faces[otherIndex + 2];\n                            faces[otherIndex + 5] = faces[otherIndex + 3];\n                            faces[otherIndex + 2] = x2\n                            faces[otherIndex + 3] = y2;\n\n                            if (otherIsOutmostTri)\n                            {\n                                faces[otherIndex + 9] = 2;\n                            }\n\n                            break;\n                    }\n\n                    // remove our face\n                    faces[index + 8] = 0;\n\n                    success++;\n                }\n            }\n        }\n    }\n\n    console.log(\"Successfully removed\", success, \"out of\", count);\n\n    return success;\n}\n\n\nfunction calculateNumNodes(faces)\n{\n    let tris = 0;\n    let quads = 0;\n    for (let i = 0; i < config.firstPassLen; i += SIZE)\n    {\n        const count = faces[i + 8];\n\n        if (count === 3)\n        {\n            tris++;\n        }\n        else if (count === 4)\n        {\n            quads++;\n        }\n    }\n\n    //console.log({quads,tris})\n\n    // we divide each quad in 9 nodes and each tri into 7 nodes\n    return quads * 9 + tris * 7;\n}\n\n\nconst NODE_SIZE = 10;\n\n\nfunction subdivide(config, faces)\n{\n    const numNodes = calculateNumNodes(faces);\n\n    const nodes = new Float64Array(numNodes * NODE_SIZE);\n\n    let pos = 0;\n\n    const insertNode = (x0, y0, isEdge ) => {\n\n        x0 |= 0;\n        y0 |= 0;\n\n        for (let i = 0; i < pos; i += NODE_SIZE)\n        {\n            if (Math.abs(nodes[i] - x0) < 2 && Math.abs(nodes[i + 1] - y0) < 2)\n            {\n                // if we discover an odd face vertex touching the outmost edge, we will\n                // not register that because the odd tris are not marked as having an outmost edge, because they don't, they\n                // only have one vertices on the edge at most\n                // Later we might however return to that node within an outmost edge and we have to make sure that\n                // we take over the isEdge status from such a node\n                if (isEdge && !nodes[i + 2])\n                {\n                    nodes[i + 2] = 1;\n                }\n\n                return i;\n            }\n        }\n\n        const index = pos;\n\n        nodes[pos] = x0;\n        nodes[pos + 1] = y0;\n        nodes[pos + 2] = isEdge ? 1 : 0;\n        nodes[pos + 3] = 0;\n\n        nodes[pos + 4] = -1;\n        nodes[pos + 5] = -1;\n        nodes[pos + 6] = -1;\n        nodes[pos + 7] = -1;\n\n        pos += NODE_SIZE;\n\n        return index;\n    }\n\n    const insertEdge = (n0, n1) => {\n            let count = nodes[n0 + 3];\n\n            let found = false;\n            for (let i=0; i < count; i++)\n            {\n                const other = nodes[n0 + 4 + i];\n                if (other === n1)\n                {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found)\n            {\n                if (count >= 6)\n                {\n                    throw new Error(\"At most 6 edges per node\")\n                }\n\n                nodes[ n0 + 4 + count++] = n1;\n                nodes[n0 + 3] = count;\n            }\n\n    }\n    const connect = (n0, n1) => {\n\n        insertEdge(n0,n1);\n        insertEdge(n1,n0);\n\n    }\n\n    for (let i = 0; i < config.firstPassLen; i += SIZE)\n    {\n        const count = faces[i + 8];\n        if (count === 0)\n        {\n            continue;\n        }\n\n        const x0 = faces[i]\n        const y0 = faces[i + 1]\n        const x1 = faces[i + 2]\n        const y1 = faces[i + 3]\n        const x2 = faces[i + 4]\n        const y2 = faces[i + 5]\n\n        const outmostEdge = faces[i + 9];\n\n        const firstEdgeIsOutmost = outmostEdge === 1;\n        const secondEdgeIsOutmost = outmostEdge === 2;\n\n        if (count === 3)\n        {\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x0) / 2;\n            const m2y = (y2 + y0) / 2;\n\n            const cx = (x0 + x1 + x2) / 3\n            const cy = (y0 + y1 + y2) / 3\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1, firstEdgeIsOutmost);\n            const n3 = insertNode(m1x, m1y, firstEdgeIsOutmost);\n            const n4 = insertNode(x2, y2, firstEdgeIsOutmost);\n            const n5 = insertNode(m2x, m2y);\n            const n6 = insertNode(cx, cy);\n\n            connect(n0, n1);\n            connect(n1, n6);\n            connect(n6, n5);\n            connect(n5, n0);\n\n            connect(n1, n2);\n            connect(n2, n3);\n            connect(n3, n6);\n            connect(n6, n1);\n\n            connect(n5, n6);\n            connect(n6, n3);\n            connect(n3, n4);\n            connect(n4, n5);\n\n        }\n        else\n        {\n            const x3 = faces[i + 6]\n            const y3 = faces[i + 7]\n\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x3) / 2;\n            const m2y = (y2 + y3) / 2;\n            const m3x = (x3 + x0) / 2;\n            const m3y = (y3 + y0) / 2;\n\n            const cx = (x0 + x1 + x2 + x3) / 4\n            const cy = (y0 + y1 + y2 + y3) / 4\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1, firstEdgeIsOutmost);\n            const n3 = insertNode(m1x, m1y, firstEdgeIsOutmost);\n            const n4 = insertNode(x2, y2, firstEdgeIsOutmost || secondEdgeIsOutmost);\n            const n5 = insertNode(m2x, m2y, secondEdgeIsOutmost);\n            const n6 = insertNode(x3, y3, secondEdgeIsOutmost);\n            const n7 = insertNode(m3x, m3y);\n            const n8 = insertNode(cx, cy);\n\n            connect(n0, n1);\n            connect(n1, n2);\n            connect(n2, n3);\n            connect(n3, n4);\n            connect(n4, n5);\n            connect(n5, n6);\n            connect(n6, n7);\n            connect(n7, n0);\n\n            connect(n8, n3);\n            connect(n8, n5);\n            connect(n8, n7);\n            connect(n8, n1);\n        }\n    }\n\n    const fillRate = (pos / NODE_SIZE) / numNodes;\n    //console.log(\"SUBDIVIDED: limit = \", numNodes, \", fill rate = \", fillRate);\n\n    return nodes.slice(0, pos);\n}\n\nfunction relaxWeighted(config, graph, maxIterations = 1)\n{\n\n    const { length } = graph;\n\n    for (let i = 0; i < maxIterations; i++)\n    {\n        let energy = 0;\n        for (let j = 0; j < length; j += NODE_SIZE)\n        {\n            if (!graph[j + 2])\n            {\n                const x0 = graph[j]\n                const y0 = graph[j + 1]\n                const edgeCount = graph[j + 3]\n\n                let centerX = 0;\n                let centerY = 0;\n                let sumWeight = 0;\n\n                for (let k = 0; k < edgeCount; k++)\n                {\n                    const other = graph[j + 4 + k];\n\n                    const x1 = graph[other];\n                    const y1 = graph[other + 1];\n\n                    const dx = x1 - x0;\n                    const dy = y1 - y0;\n\n                    let weight = Math.sqrt(dx * dx + dy * dy);\n\n                    centerX += x1 * weight;\n                    centerY += y1 * weight;\n                    sumWeight += weight;\n                }\n\n                const x1 = centerX / sumWeight\n                const y1 = centerY / sumWeight;\n\n                const dx = x1 - x0;\n                const dy = y1 - y0;\n\n                graph[j] = x1;\n                graph[j + 1] = y1;\n\n                energy += dx*dx+dy*dy;\n\n            }\n        }\n\n        if (energy < config.minEnergy)\n        {\n            console.log(\"Reached minimal energy\", config.minEnergy, \"after\", config.relaxCount, \"iterations\")\n            return true;\n        }\n        config.relaxCount++;\n    }\n\n    if (!config.animatedEasing)\n    {\n        console.log(\"Stopping after max iterations = \" + config.maxIterations)\n    }\n\n    return false;\n}\n\nlet faces;\nfunction createGraph(config)\n{\n    updateConfig(config);\n\n    //console.log(\"CREATE GRAPH\", config);\n\n    const f = createHexagonalTiles(config);\n\n    faces = f//.slice();\n\n    removeRandomEdges(config, f)\n    const graph = subdivide(config, f);\n\n\n    if (!config.animating)\n    {\n        relaxWeighted(config, graph, config.maxIterations);\n    }\n\n    //console.log(\"GRAPH SIZE\", graph.length / NODE_SIZE, graph);\n\n    return graph;\n}\n\nlet graph;\n\nfunction redrawGraph()\n{\n\n    ctx.save();\n\n    const hw = config.width /2;\n    const hh = config.height /2;\n\n    ctx.translate(hw, hh)\n\n\n\n    const {length} = graph;\n\n\n    ctx.fillStyle = \"#000\";\n    ctx.fillRect(-hw,-hh, config.width, config.height)\n\n    // draw original quads and tris\n\n    // ctx.strokeStyle = \"#f00\";\n    // ctx.lineWidth = 1;\n    //\n    //\n    // let outerCount = 0;\n    // for (let pos = 0; pos < config.firstPassLen; pos += SIZE)\n    // {\n    //     const count = faces[pos + 8];\n    //\n    //     if (count >= 3)\n    //     {\n    //\n    //         ctx.beginPath();\n    //         ctx.moveTo(faces[pos ],faces[pos + 1]);\n    //\n    //         for (let i = 1; i < count; i++)\n    //         {\n    //             ctx.lineTo(faces[pos + i*2],faces[pos +  i*2 + 1]);\n    //         }\n    //\n    //         ctx.closePath();\n    //         ctx.stroke();\n    //\n    //         // const outmostEdge = faces[pos + 9];\n    //         // if (outmostEdge >= 0)\n    //         // {\n    //         //     ctx.strokeStyle = \"#fe0\";\n    //         //     ctx.beginPath();\n    //         //     ctx.moveTo(faces[pos + outmostEdge * 2  ],faces[pos + outmostEdge * 2 + 1]);\n    //         //\n    //         //     if (outmostEdge === count - 1)\n    //         //     {\n    //         //         ctx.lineTo(faces[pos  ],faces[pos + 1]);\n    //         //     }\n    //         //     else\n    //         //     {\n    //         //         ctx.lineTo(faces[pos + (outmostEdge + 1 ) * 2  ],faces[pos + (outmostEdge + 1 ) * 2 + 1]);\n    //         //     }\n    //         //     ctx.stroke();\n    //         //     ctx.strokeStyle = \"#f00\";\n    //         //\n    //         //     outerCount++;\n    //         //\n    //         // }\n    //\n    //     }\n    // }\n///    console.log(\"Number of outer edges\", outerCount)\n\n\n    //console.log(\"DRAW EDGES\")\n\n    ctx.strokeStyle = \"#fff\";\n    ctx.fillStyle = \"#f0f\";\n    ctx.lineWidth = 1;\n\n\n    function drawEdge(x0, y0, node)\n    {\n        const x1 = graph[node];\n        const y1 = graph[node + 1];\n\n        ctx.beginPath();\n        ctx.moveTo(x0, y0);\n        ctx.lineTo(x1, y1);\n        ctx.stroke();\n    }\n\n\n    for (let i = 0; i < length; i += NODE_SIZE)\n    {\n        const x0 = graph[i];\n        const y0 = graph[i + 1];\n        const edgeCount = graph[i + 3];\n\n        for (let j=0; j < edgeCount; j++)\n        {\n            drawEdge(x0, y0, graph[i + 4 + j])\n        }\n    }\n    //\n    // for (let i = 0; i < length; i += NODE_SIZE)\n    // {\n    //     const x0 = graph[i];\n    //     const y0 = graph[i + 1];\n    //     const isEdge = graph[i + 2];\n    //\n    //     if (isEdge)\n    //     {\n    //         ctx.fillRect(x0 - 4,  y0 - 4, 8, 8)\n    //     }\n    // }\n\n    // ctx.strokeStyle = \"#f00\";\n    // ctx.lineWidth = 4;\n    //\n    // for (let pos = 0; pos < config.firstPassLen; pos += SIZE)\n    // {\n    //     const count = faces[pos + 8];\n    //     const outmostEdge = faces[pos + 9];\n    //\n    //\n    //     const last = count - 1;\n    //     for (let i=0; i < count; i++)\n    //     {\n    //         if (i === outmostEdge)\n    //         {\n    //             ctx.strokeStyle = \"rgba(255,0,0,0.5)\";\n    //         }\n    //         else\n    //         {\n    //             ctx.strokeStyle = \"rgba(0,255,0,0.5)\";\n    //         }\n    //\n    //         ctx.beginPath();\n    //         ctx.moveTo(faces[pos + i * 2], faces[pos + i * 2 + 1]);\n    //         ctx.lineTo(\n    //             i === last ? faces[pos    ] : faces[pos + (i+1) * 2],\n    //             i === last ? faces[pos + 1] : faces[pos + (i+1) * 2 + 1]\n    //         );\n    //         ctx.stroke();\n    //     }\n    // }\n\n    ctx.restore();\n\n    if (config.animating)\n    {\n        if (relaxWeighted(config, graph))\n        {\n            config.animating = false;\n        }\n        raf(redrawGraph)\n    }\n}\n\n\nfunction resize()\n{\n    const width = (window.innerWidth * 0.85) | 0;\n    const height = (window.innerHeight) | 0;\n\n    config.width = width;\n    config.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n\n\n    graph = createGraph(config)\n\n    //graph[6] = 1;\n\n    raf(redrawGraph);\n}\n\n\ndomready(\n    () => {\n\n        canvas = document.getElementById(\"screen\");\n        ctx = canvas.getContext(\"2d\");\n\n\n        ctx.fillStyle = \"#888\";\n        ctx.strokeStyle = \"#f00\";\n\n        resize();\n\n        ReactDOM.render(\n            <Settings\n                config={config}\n            />,\n            document.getElementById(\"ui\")\n        )\n\n\n        window.addEventListener(\"resize\", resize, true);\n\n\n    }\n);\n"],"sourceRoot":""}