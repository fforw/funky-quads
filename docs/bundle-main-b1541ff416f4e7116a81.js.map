{"version":3,"sources":["webpack://Demo/webpack/bootstrap","webpack://Demo/./src/vector.js","webpack://Demo/./src/Settings.js","webpack://Demo/./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","sqrt","Math","Vector","x","y","this","targetLength","scale","reducer","state","action","type","newState","errors","recreate","error","ctx","canvas","Input","label","config","dispatch","placeholder","validate","errorForField","useDebouncedCallback","debouncedInputValidation","className","cx","defaultValue","title","size","onChange","ev","target","NumberInput","min","max","rest","v","isNaN","Settings","configFromProps","useReducer","console","log","onClick","TAU","PI","SIXTH","width","height","edgeLength","numberOfRings","iterations","removeEdges","findOtherEdge","faces","x0","y0","x1","y1","index","out","count","edge","subdivide","numNodes","tris","quads","firstPassLen","calculateNumNodes","nodes","Float64Array","pos","insertNode","abs","connect","n0","n1","dir","x2","y2","m0x","m0y","m1x","m1y","m2x","m2y","cy","n2","n3","n4","n5","n6","x3","y3","m3x","m3y","n7","n8","MAX_POWER","maxPower","power","graph","SQRT_2","ease","minDistance","pullEdge","node","dx","dy","len","dDelta","f","delta","northEdge","eastEdge","southEdge","westEdge","k","createGraph","limit","numFaces","firstPassNumEdges","cfg","assign","resize","updateConfig","DIRECTIONS","cos","sin","off","numTris","v0","v1","v2","copy","add","createHexagonalTiles","success","random","caseMask","targetIsOutmostFace","otherIndex","otherEdge","removeRandomEdges","redrawGraph","save","hw","hh","translate","strokeStyle","lineWidth","drawEdge","beginPath","moveTo","lineTo","stroke","fillStyle","fillRect","restore","raf","innerWidth","innerHeight","domready","document","getElementById","getContext","ReactDOM","render","addEventListener"],"mappings":"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","file":"bundle-main-b1541ff416f4e7116a81.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpDemo\"] = window[\"webpackJsonpDemo\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([15,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const sqrt = Math.sqrt;\n\nclass Vector\n{\n    constructor(x,y)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Returns a copy of this vector.\n     *\n     * @returns {Vector} copy\n     */\n    copy()\n    {\n        return new Vector(this.x,this.y);\n    }\n\n    /**\n     * Adds to this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n\n    add(x,y)\n    {\n        if (x instanceof Vector)\n        {\n            this.x += x.x;\n            this.y += x.y;\n        }\n        else\n        {\n            this.x += x;\n            this.y += y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Subtracts from this vector\n     *\n     * @param x     {number|Vector} x coordinate or a vector\n     * @param y     {number?} y coordinate, ignored if x is a vector\n     * @returns {Vector} this vector\n     */\n    subtract(x,y)\n    {\n        if (x instanceof Vector)\n        {\n            this.x -= x.x;\n            this.y -= x.y;\n        }\n        else\n        {\n            this.x -= x;\n            this.y -= y;\n        }\n\n        return this;\n    }\n\n    /**\n     * Scales the vector by a planar number.\n     *\n     * @param n     scale\n     * @returns {Vector} this vector, scaled\n     */\n    scale(n)\n    {\n        this.x *= n;\n        this.y *= n;\n\n        return this;\n    }\n\n    /**\n     * Length of this vector\n     *\n     * @returns {number}    length\n     */\n    length()\n    {\n        const { x, y } = this;\n        return sqrt(x*x+y*y);\n    }\n\n    /**\n     * Scales the vector to normal length or a specified length\n     *\n     * @param targetLength      {number?} target length of the vector (default is 1, the normal vector length)\n     *\n     * @returns {Vector}\n     */\n    norm(targetLength = 1)\n    {\n        return this.scale(targetLength / this.length());\n    }\n\n    /**\n     * Rotate vector 90 degrees clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateClockwise()\n    {\n        const { x, y } = this;\n\n        //noinspection JSSuspiciousNameCombination\n        this.x = y;\n        this.y = -x;\n\n        return this;\n    }\n\n    /**\n     * Rotate vector 90 degrees counter clockwise.\n     *\n     * @returns {Vector}\n     */\n    rotateCounterClockwise()\n    {\n        const { x, y } = this;\n\n        this.x = -y;\n        //noinspection JSSuspiciousNameCombination\n        this.y = x;\n\n        return this;\n    }\n}\n\nexport default Vector;\n","import React, { useReducer, useState } from \"react\"\nimport { useDebouncedCallback } from \"use-debounce\"\nimport cx from \"classnames\"\n\nconst SET_FIELD = \"SET_FIELD\";\nconst SET_ERROR = \"SET_ERROR\";\n\nfunction reducer(state,action)\n{\n    const { type } = action;\n    switch(type)\n    {\n        case SET_FIELD:\n            const newState = {\n                ... state,\n                [action.name] : action.value,\n                errors: {\n                    ... state.errors,\n                    [action.name] : \"\"\n                }\n            };\n            newState.recreate(newState);\n            return newState;\n\n        case SET_ERROR:\n            return {\n                ... state,\n                errors: {\n                    ... state.errors,\n                    [action.name] : action.error\n                }\n            };\n    }\n\n}\n\n\nconst Input = ({label, name, config, dispatch, placeholder, validate, error}) =>  {\n\n    const errorForField = config.errors && config.errors[name];\n\n    const [ debouncedInputValidation, cancelDebouncedInputValidation ] = useDebouncedCallback(value => {\n\n        if (validate)\n        {\n            value = validate(value);\n        }\n        if (value !== null)\n        {\n            dispatch({\n                type: SET_FIELD,\n                name,\n                value\n            })\n        }\n        else\n        {\n            dispatch({\n                type: SET_ERROR,\n                name,\n                error\n            })\n        }\n\n\n    }, 350);\n    return (\n        <div>\n            <label>\n                {\n                    label\n                }\n            <input\n                className={ cx( !!errorForField && \"error\" )}\n                type=\"text\"\n                defaultValue={ config[name] }\n                placeholder={placeholder}\n                title={ placeholder }\n                size={4}\n                onChange={ ev => {\n                    let value = ev.target.value;\n\n                    debouncedInputValidation(value);\n                }}\n            />\n            </label>\n            {\n                errorForField && <div className=\"error\">{ errorForField }</div>\n            }\n        </div>\n\n    )\n}\n\nconst NumberInput = ({ min, max, ... rest}) =>  {\n    return (\n        <Input\n            { ... rest }\n            placeholder={ min + \" to \" + max }\n            error={ \"Must be number from \" + min + \" to \" + max }\n            validate={ v => {\n                const n = +v;\n                return !isNaN(n) && n >=min && n <= max ? n : null\n\n            }}\n\n        />\n    )\n}\n\n\nconst Settings = ({config: configFromProps}) => {\n\n    const [config, dispatch] = useReducer(reducer, configFromProps);\n\n    console.log(\"Render\", config);\n\n    return (\n        <div>\n            <NumberInput\n                label=\"Number of Rings\"\n                name=\"numberOfRings\"\n                config={ config }\n                dispatch={dispatch}\n                min={1}\n                max={10}\n\n            />\n            <NumberInput\n                label=\"Easing-Iterations\"\n                name=\"iterations\"\n                config={ config }\n                dispatch={dispatch}\n                min={0}\n                max={2000}\n            />\n            <NumberInput\n                label=\"Percent of edges to remove\"\n                name=\"removeEdges\"\n                config={ config }\n                dispatch={dispatch}\n                min={0}\n                max={100}\n            />\n            <button\n                type=\"button\"\n                onClick={ () => config.recreate(config) }\n            >\n                Redraw\n            </button>\n        </div>\n    );\n};\n\nexport default Settings;\n","import domready from \"domready\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport raf from \"raf\"\n// noinspection ES6UnusedImports\nimport STYLE from \"./style.css\"\nimport Vector from \"./vector\";\nimport Settings from \"./Settings\";\n\n\nconst PHI = (1 + Math.sqrt(5)) / 2;\nconst TAU = Math.PI * 2;\nconst DEG2RAD_FACTOR = TAU / 360;\n\n\nlet ctx, canvas;\n\nconst SIZE = 10; // count + case(1=odd face 2=outmost tri) + 4 * x/y\n\nconst SIXTH = TAU / 6;\n\nfunction calculateNumberOfFaces(limit)\n{\n    return 6 * (limit + 1) * (limit + 1);\n}\n\nconst config = {\n    width: 0,\n    height: 0,\n    edgeLength: 80,\n    numberOfRings: 5,\n    iterations: 100,\n    removeEdges: 90\n};\n\nfunction updateConfig(config)\n{\n    config.numFaces = calculateNumberOfFaces(config.numberOfRings)\n    config.firstPassLen = config.numFaces * SIZE\n    config.firstPassNumEdges = config.numFaces * 3\n    config.edgeLength = (config.height / (config.numberOfRings * 2 + 1))|0;\n\n    config.recreate = cfg =>\n    {\n        Object.assign(config, cfg)\n        resize();\n    }\n    //console.log({config})\n}\n\n\nfunction createHexagonalTiles(config)\n{\n\n    const limit = config.numberOfRings;\n\n    console.log(\"createHexagonalTiles\", limit);\n\n    const DIRECTIONS = [\n        new Vector(\n            Math.cos(0) * config.edgeLength,\n            Math.sin(0) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH) * config.edgeLength,\n            Math.sin(SIXTH) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 2) * config.edgeLength,\n            Math.sin(SIXTH * 2) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 3) * config.edgeLength,\n            Math.sin(SIXTH * 3) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 4) * config.edgeLength,\n            Math.sin(SIXTH * 4) * config.edgeLength\n        ),\n        new Vector(\n            Math.cos(SIXTH * 5) * config.edgeLength,\n            Math.sin(SIXTH * 5) * config.edgeLength\n        )\n    ];\n\n    const faces = new Float64Array(config.firstPassLen);\n\n    let off = 0;\n\n    let count = 0;\n    let numTris = 1;\n    do\n    {\n        for (let i = 0; i < 6; i++)\n        {\n            const v0 = DIRECTIONS[i];\n            const v1 = DIRECTIONS[(i + 1) % 6];\n            const v2 = DIRECTIONS[(i + 2) % 6];\n\n            let pos = v0.copy().scale(count);\n\n            for (let j = 0; j < numTris; j++)\n            {\n                if (j & 1)\n                {\n                    faces[off++] = (pos.x) | 0;\n                    faces[off++] = (pos.y) | 0;\n                    faces[off++] = (pos.x + v1.x) | 0;\n                    faces[off++] = (pos.y + v1.y) | 0;\n                    faces[off++] = (pos.x + v2.x) | 0;\n                    faces[off++] = (pos.y + v2.y) | 0;\n                    off += 2;\n                    faces[off++] = 3;\n                    faces[off++] = 1;\n\n                    pos.add(v2);\n                }\n                else\n                {\n\n                    faces[off++] = (pos.x) | 0;\n                    faces[off++] = (pos.y) | 0;\n                    faces[off++] = (pos.x + v0.x) | 0;\n                    faces[off++] = (pos.y + v0.y) | 0;\n                    faces[off++] = (pos.x + v1.x) | 0;\n                    faces[off++] = (pos.y + v1.y) | 0;\n                    off += 2;\n                    faces[off++] = 3;\n                    faces[off++] = count === limit ? 2 : 0;\n                }\n            }\n        }\n\n        numTris += 2;\n\n    } while (count++ < limit);\n\n    return faces;\n}\n\n\nfunction findOtherEdge(faces, x0, y0, x1, y1, index, out)\n{\n    for (let i = 0; i < faces.length; i += SIZE)\n    {\n        if (i === index)\n        {\n            continue;\n        }\n\n        // console.log(\"find\", x0, y0, x1, y1, \":\",\n        //     faces[i    ], faces[i + 1],\n        //     faces[i + 2], faces[i + 3],\n        //     faces[i + 4], faces[i + 5],\n        //     faces[i + 6], faces[i + 7],\n        // );\n\n        const count = faces[i + 8];\n        if (\n            faces[i] === x1 && faces[i + 1] === y1 &&\n            faces[i + 2] === x0 && faces[i + 3] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 0;\n            return;\n        }\n        if (\n            faces[i + 2] === x1 && faces[i + 3] === y1 &&\n            faces[i + 4] === x0 && faces[i + 5] === y0\n        )\n        {\n            out.index = i;\n            out.edge = 1;\n            return;\n        }\n\n        if (count === 3)\n        {\n            if (\n                faces[i + 4] === x1 && faces[i + 5] === y1 &&\n                faces[i] === x0 && faces[i + 1] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n        }\n        else\n        {\n            if (\n                faces[i + 4] === x1 && faces[i + 5] === y1 &&\n                faces[i + 6] === x0 && faces[i + 7] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 2;\n                return;\n            }\n\n            if (\n                faces[i + 6] === x1 && faces[i + 7] === y1 &&\n                faces[i] === x0 && faces[i] === y0\n            )\n            {\n                out.index = i;\n                out.edge = 3;\n                return;\n            }\n\n        }\n    }\n\n    out.index = -1;\n}\n\n\nconst out = {index: -1, edge: 0};\n\nfunction removeRandomEdges(config, faces)\n{\n    const count = config.firstPassNumEdges * config.removeEdges / 100;\n\n    console.log(\"remove attempts\", count);\n\n    let success = 0;\n    for (let i = 0; i < count; i++)\n    {\n        const index = ((Math.random() * config.numFaces) | 0) * SIZE;\n        if (faces[index + 8] === 3)\n        {\n            const caseMask = faces[index + 9];\n            const targetIsOddFace = !!(caseMask & 1);\n            const targetIsOutmostFace = !!(caseMask & 2);\n\n            const edge = (Math.random() * 3) | 0;\n\n            if (!(targetIsOutmostFace && edge === 1))\n            {\n\n                const x0 = faces[index + edge * 2];\n                const y0 = faces[index + edge * 2 + 1];\n                const x1 = edge === 2 ? faces[index] : faces[index + (edge + 1) * 2];\n                const y1 = edge === 2 ? faces[index + 1] : faces[index + (edge + 1) * 2 + 1];\n\n                findOtherEdge(faces, x0, y0, x1, y1, index, out)\n                if (out.index >= 0 && faces[out.index + 8] === 3)\n                {\n                    const {index: otherIndex, edge: otherEdge} = out;\n                    const x2 = edge === 0 ? faces[index + 2 * 2] : faces[index + (edge - 1) * 2];\n                    const y2 = edge === 0 ? faces[index + 2 * 2 + 1] : faces[index + (edge - 1) * 2 + 1];\n\n                    faces[otherIndex + 8] = 4;\n                    switch (otherEdge)\n                    {\n                        case 2:\n                            faces[otherIndex + 6] = x2;\n                            faces[otherIndex + 7] = y2;\n                            break;\n                        case 1:\n                            faces[otherIndex + 6] = faces[otherIndex + 4];\n                            faces[otherIndex + 7] = faces[otherIndex + 5];\n                            faces[otherIndex + 4] = x2;\n                            faces[otherIndex + 5] = y2;\n                            break;\n                        case 0:\n                            faces[otherIndex + 6] = faces[otherIndex + 4];\n                            faces[otherIndex + 7] = faces[otherIndex + 5];\n                            faces[otherIndex + 4] = faces[otherIndex + 2];\n                            faces[otherIndex + 5] = faces[otherIndex + 3];\n                            faces[otherIndex + 2] = x2\n                            faces[otherIndex + 3] = y2;\n                            break;\n                    }\n                    faces[index + 8] = 0;\n                    //mark(faces, index,edge)\n\n                    //console.log(\"Face #\", printFace(faces,index), \", edge = \", edge, \" paired with  Face #\" + printFace(faces,out.index), \", edge = \", out.edge)\n                    success++;\n                }\n            }\n        }\n    }\n\n    console.log(\"Success:\", success, \"out of\", count);\n\n    return success;\n}\n\n\nfunction calculateNumNodes(faces)\n{\n    let tris = 0;\n    let quads = 0;\n    for (let i = 0; i < config.firstPassLen; i += SIZE)\n    {\n        const count = faces[i + 8];\n\n        if (count === 3)\n        {\n            tris++;\n        }\n        else if (count === 4)\n        {\n            quads++;\n        }\n    }\n\n    console.log({quads,tris})\n\n    // we divide each quad in 9 nodes and each tri into 7 nodes\n    return quads * 9 + tris * 7;\n}\n\n\nconst NODE_SIZE = 6;\n\nconst NORTH = 0;\nconst EAST = 1;\nconst SOUTH = 2;\nconst WEST = 3;\n\n\nfunction subdivide(config, faces)\n{\n    const numNodes = calculateNumNodes(faces);\n\n    const nodes = new Float64Array(numNodes * NODE_SIZE);\n\n    let pos = 0;\n\n    const insertNode = (x0, y0) => {\n\n        x0 |=0;\n        y0 |=0;\n\n        for (let i = 0; i < pos; i += NODE_SIZE)\n        {\n            if (Math.abs(nodes[i] - x0) < 2 && Math.abs(nodes[i + 1] - y0) < 2)\n            {\n                return i;\n            }\n        }\n\n        const index = pos;\n\n        nodes[pos] = x0;\n        nodes[pos + 1] = y0;\n\n        nodes[pos + 2 + NORTH] = -1;\n        nodes[pos + 2 + EAST] = -1;\n        nodes[pos + 2 + SOUTH] = -1;\n        nodes[pos + 2 + WEST] = -1;\n\n        pos += NODE_SIZE;\n\n        return index;\n    }\n\n    const connect = (n0, n1, dir) => {\n\n        nodes[n0 + 2 + dir] = n1;\n        nodes[n1 + 2 + ((dir + 2) & 3)] = n0;\n    }\n\n    for (let i = 0; i < config.firstPassLen; i += SIZE)\n    {\n        const count = faces[i + 8];\n\n        if (count === 0)\n        {\n            continue;\n        }\n\n        const x0 = faces[i]\n        const y0 = faces[i + 1]\n        const x1 = faces[i + 2]\n        const y1 = faces[i + 3]\n        const x2 = faces[i + 4]\n        const y2 = faces[i + 5]\n\n        if (count === 3)\n        {\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x0) / 2;\n            const m2y = (y2 + y0) / 2;\n\n            const cx = (x0 + x1 + x2) / 3\n            const cy = (y0 + y1 + y2) / 3\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1);\n            const n3 = insertNode(m1x, m1y);\n            const n4 = insertNode(x2, y2);\n            const n5 = insertNode(m2x, m2y);\n            const n6 = insertNode(cx, cy);\n\n            connect(n0, n1, NORTH);\n            connect(n1, n6, EAST);\n            connect(n6, n5, SOUTH);\n            connect(n5, n0, WEST);\n\n            connect(n1, n2, NORTH);\n            connect(n2, n3, EAST);\n            connect(n3, n6, SOUTH);\n            connect(n6, n1, WEST);\n\n            connect(n5, n6, NORTH);\n            connect(n6, n3, EAST);\n            connect(n3, n4, SOUTH);\n            connect(n4, n5, WEST);\n\n        }\n        else\n        {\n            const x3 = faces[i + 6]\n            const y3 = faces[i + 7]\n\n            const m0x = (x0 + x1) / 2;\n            const m0y = (y0 + y1) / 2;\n            const m1x = (x1 + x2) / 2;\n            const m1y = (y1 + y2) / 2;\n            const m2x = (x2 + x3) / 2;\n            const m2y = (y2 + y3) / 2;\n            const m3x = (x3 + x0) / 2;\n            const m3y = (y3 + y0) / 2;\n\n            const cx = (x0 + x1 + x2 + x3) / 4\n            const cy = (y0 + y1 + y2 + y3) / 4\n\n            const n0 = insertNode(x0, y0);\n            const n1 = insertNode(m0x, m0y);\n            const n2 = insertNode(x1, y1);\n            const n3 = insertNode(m1x, m1y);\n            const n4 = insertNode(x2, y2);\n            const n5 = insertNode(m2x, m2y);\n            const n6 = insertNode(x3, y3);\n            const n7 = insertNode(m3x, m3y);\n            const n8 = insertNode(cx, cy);\n\n            connect(n0, n1, NORTH);\n            connect(n1, n2, NORTH);\n            connect(n2, n3, EAST);\n            connect(n3, n4, EAST);\n            connect(n4, n5, SOUTH);\n            connect(n5, n6, SOUTH);\n            connect(n6, n7, WEST);\n            connect(n7, n0, WEST);\n\n            connect(n8, n3, NORTH);\n            connect(n8, n5, EAST);\n            connect(n8, n7, SOUTH);\n            connect(n8, n1, WEST);\n        }\n    }\n\n    console.log(\"SUBDIVIDED: limit = \", numNodes, \", fill rate = \", (pos / NODE_SIZE) / numNodes);\n\n    return nodes.slice(0, pos);\n}\n\n\nconst PULL_POWER = 0.1;\nconst PUSH_POWER = 0.2;\n\n/**\n * Maximum power being applied by a force\n */\nexport const MAX_POWER = 10000;\nfunction maxPower(power)\n{\n    return power < MAX_POWER ? power : MAX_POWER;\n}\n\nconst SQRT_2 = Math.sqrt(2);\n\nfunction ease(config, graph, iterations = 1)\n{\n    const targetLength = config.edgeLength / 4;\n\n    const {length} = graph;\n\n    const minDistance = targetLength * SQRT_2;\n\n\n    function pullEdge(x0, y0, node, targetLength)\n    {\n        if (node >= 0)\n        {\n            const x1 = graph[node];\n            const y1 = graph[node + 1];\n\n            let dx = x1 - x0;\n            let dy = y1 - y0;\n\n            const len = Math.sqrt(dx * dx + dy * dy);\n\n            if (len > targetLength)\n            {\n                const dDelta = PULL_POWER * (len - targetLength) / targetLength;\n                const power = maxPower(dDelta * dDelta);\n\n\n                if (len === 0)\n                {\n                    return;\n                }\n\n                const f = power / len;\n                dx *= f;\n                dy *= f;\n\n                graph[node] -= dx;\n                graph[node + 1] -= dy;\n            }\n        }\n    }\n\n\n    function push(x0, y0, node)\n    {\n        const x1 = graph[node];\n        const y1 = graph[node + 1];\n        \n        let dx = x1 - x0;\n        let dy = y1 - y0;\n\n        const len = Math.sqrt(dx * dx + dy * dy);\n\n        if (len < minDistance)\n        {\n            const delta = PUSH_POWER * (minDistance - len) / minDistance ;\n            const power = maxPower(delta * delta);\n            const f = power / len;\n            dx *= f;\n            dy *= f;\n\n            graph[node] += dx;\n            graph[node + 1] += dy;\n        }\n\n    }\n\n\n    function pullAcross(x0, y0, n0, n1, targetLength)\n    {\n        if (n0 >= 0&& eastEdge)\n        {\n            const x0 = graph[eastEdge];\n            const y0 = graph[eastEdge + 1];\n            pullEdge(x0, y0, n0, targetLength * SQRT_2)\n        }\n\n\n    }\n\n\n    for (let i = 0; i < iterations; i++)\n    {\n        for (let j = 0; j < length; j += NODE_SIZE)\n        {\n            const x0 = graph[j];\n            const y0 = graph[j + 1];\n\n            const northEdge = graph[j + 2];\n            const eastEdge = graph[j + 3];\n            const southEdge = graph[j + 4];\n            const westEdge = graph[j + 5];\n\n            pullEdge(x0, y0, northEdge, targetLength)\n            pullEdge(x0, y0, eastEdge, targetLength)\n            pullEdge(x0, y0, southEdge, targetLength)\n            pullEdge(x0, y0, westEdge, targetLength)\n\n            // pullAcross(x0, y0, northEdge, eastEdge, targetLength)\n            // pullAcross(x0, y0, southEdge, eastEdge, targetLength)\n            // pullAcross(x0, y0, southEdge, westEdge, targetLength)\n            // pullAcross(x0, y0, northEdge, westEdge, targetLength)\n\n            if (northEdge >= 0 && eastEdge >= 0)\n            {\n                const x0 = graph[northEdge];\n                const y0 = graph[northEdge + 1];\n                pullEdge(x0, y0, eastEdge , targetLength * SQRT_2)\n            }\n\n            if (southEdge >= 0 && eastEdge >= 0)\n            {\n                const x0 = graph[eastEdge];\n                const y0 = graph[eastEdge + 1];\n                pullEdge(x0, y0, southEdge, targetLength * SQRT_2)\n            }\n\n\n            if (southEdge >= 0 && westEdge >= 0)\n            {\n                const x0 = graph[southEdge];\n                const y0 = graph[southEdge + 1];\n                pullEdge(x0, y0, westEdge, targetLength * SQRT_2)\n            }\n\n            if (northEdge >= 0 && westEdge >= 0)\n            {\n                const x0 = graph[westEdge];\n                const y0 = graph[westEdge + 1];\n                pullEdge(x0, y0, northEdge, targetLength * SQRT_2)\n            }\n\n        }\n\n\n        for (let j = 0; j < length; j += NODE_SIZE)\n        {\n            for (let k = length - NODE_SIZE; k > j; k -= NODE_SIZE)\n            {\n                const x0 = graph[j];\n                const y0 = graph[j + 1];\n\n                push(x0, y0, k)\n            }\n        }\n\n    }\n}\n\nfunction createGraph(config)\n{\n    updateConfig(config);\n\n    console.log(\"CREATE GRAPH\", config);\n\n    const faces = createHexagonalTiles(config);\n    removeRandomEdges(config, faces)\n    const graph = subdivide(config, faces);\n    ease(config, graph, config.iterations);\n\n    console.log(\"GRAPH SIZE\", graph.length / NODE_SIZE, graph);\n\n    return graph;\n}\n\nlet graph;\n\nfunction redrawGraph()\n{\n    ease(config, graph, config.iterations);\n\n    // // draw original quads and tris\n    //\n    // ctx.strokeStyle = \"#800\";\n    // ctx.lineWidth = 4;\n    //\n    //\n    // for (let pos = 0; pos < config.firstPassLen; pos += SIZE)\n    // {\n    //     const count = faces[pos + 8];\n    //\n    //     if (count >= 3)\n    //     {\n    //         const caseMask = faces[pos + 9];\n    //         const targetIsOddFace = !!(caseMask & 1);\n    //         const targetIsOutmostFace = !!(caseMask & 2);\n    //\n    //\n    //         ctx.beginPath();\n    //         ctx.moveTo(faces[pos ],faces[pos + 1]);\n    //\n    //         for (let i = 1; i < count; i++)\n    //         {\n    //             ctx.lineTo(faces[pos + i*2],faces[pos +  i*2 + 1]);\n    //         }\n    //\n    //         ctx.closePath();\n    //         ctx.stroke();\n    //\n    //     }\n    // }\n\n    ctx.save();\n\n    const hw = config.width /2;\n    const hh = config.height /2;\n\n    ctx.translate(hw, hh)\n\n\n    ctx.strokeStyle = \"#080\";\n    ctx.lineWidth = 2;\n\n    const {length} = graph;\n\n\n    ctx.fillStyle = \"#000\";\n    ctx.fillRect(-hw,-hh, config.width, config.height)\n\n    function drawEdge(x0, y0, node)\n    {\n        if (node >= 0)\n        {\n            const x1 = graph[node];\n            const y1 = graph[node + 1];\n\n            ctx.beginPath();\n            ctx.moveTo(x0, y0);\n            ctx.lineTo(x1, y1);\n            ctx.stroke();\n        }\n    }\n\n\n    for (let i = 0; i < length; i += NODE_SIZE)\n    {\n        const x0 = graph[i];\n        const y0 = graph[i + 1];\n\n        const northEdge = graph[i + 2];\n        const eastEdge = graph[i + 3];\n        const southEdge = graph[i + 4];\n        const westEdge = graph[i + 5];\n\n        drawEdge(x0, y0, northEdge)\n        drawEdge(x0, y0, eastEdge)\n        drawEdge(x0, y0, southEdge)\n        drawEdge(x0, y0, westEdge)\n\n    }\n\n    ctx.restore();\n\n    raf(redrawGraph)\n}\n\n\nfunction resize()\n{\n    const width = (window.innerWidth * 0.85) | 0;\n    const height = (window.innerHeight) | 0;\n\n    config.width = width;\n    config.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n\n\n    graph = createGraph(config)\n\n    raf(redrawGraph);\n}\n\n\ndomready(\n    () => {\n\n        canvas = document.getElementById(\"screen\");\n        ctx = canvas.getContext(\"2d\");\n\n\n        ctx.fillStyle = \"#888\";\n        ctx.strokeStyle = \"#f00\";\n\n        resize();\n\n        ReactDOM.render(\n            <Settings\n                config={config}\n            />,\n            document.getElementById(\"ui\")\n        )\n\n\n        window.addEventListener(\"resize\", resize, true);\n\n\n    }\n);\n"],"sourceRoot":""}